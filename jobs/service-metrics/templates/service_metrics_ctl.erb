#!/bin/bash -e

run_dir=/var/vcap/sys/run/service-metrics
log_dir=/var/vcap/sys/log/service-metrics
pkg_dir=/var/vcap/packages/service-metrics

pidfile=$run_dir/service-metrics.pid

source /var/vcap/packages/service-metrics_utils/pid_utils.sh

log_facility=user

script_log_tag=service-metrics-ctl
script_log_file=$log_dir/ctl.log
metrics_log_tag=service-metrics
metrics_log_file=$log_dir/service-metrics.log

write_log() {
  local log_tag=$1
  local log_file=$2
  local log_level=$3
  logger --priority $log_facility.$log_level --tag $log_tag --stderr 2>> $log_file
}
export -f write_log

log() {
  local log_level=$1
  shift
  echo "$(date): $*" | write_log $script_log_tag $script_log_file $log_level
}
export -f log

metrics_log() {
  local log_level=$1
  write_log $metrics_log_tag $metrics_log_file $log_level
}
export -f metrics_log

case $1 in

  start)
    log info "start script: starting service metrics"
    pid_guard $pidfile "ServiceMetrics"

    mkdir -p $run_dir
    mkdir -p $log_dir

    chown -R vcap:vcap $log_dir

    echo $$ > $pidfile

    <% p("service_metrics.debug") == true ? debug_string = "--debug " : debug_string = "" %>

    exec chpst -u vcap:vcap ${pkg_dir}/bin/service-metrics \
      --origin <%= p('service_metrics.origin') %> \
      --metron-addr localhost:<%= p("metron_agent.dropsonde_incoming_port") %> \
      --metrics-cmd <%= p("service_metrics.metrics_command") %> \
      <%= p("service_metrics.metrics_command_args").collect { |e| "--metrics-cmd-arg '#{e}'" }.join(" ") %> \
      --metrics-interval <%= p("service_metrics.execution_interval_seconds") %>s \
      <%= debug_string %> > >(metrics_log info) 2>&1

    ;;

  stop)
    log info "stop script: stopping service-metrics"
    kill_and_wait $pidfile 40
    log info "stop script: completed stopping service-metrics"
    ;;

  *)
    log warning "operation '$1' is not supported"
    echo "Usage: service_metrics_ctl {start|stop}"

    ;;

esac
